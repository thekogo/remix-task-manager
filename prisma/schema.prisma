datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id          Int           @id @default(autoincrement())
  lineId      String        @unique
  displayName String
  firstName   String?
  lastName    String?
  pictureUrl  String
  groups      GroupMember[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Comment   Comment[]
}

model Group {
  id      Int           @id @default(autoincrement())
  name    String
  code    String        @unique
  members GroupMember[]
}

model GroupMember {
  user     User    @relation(fields: [userId], references: [id])
  userId   Int
  group    Group   @relation(fields: [groupId], references: [id])
  groupId  Int
  position String?
  role     Role
  Task     Task[]

  @@id([userId, groupId])
}

model Task {
  id                 Int         @id @default(autoincrement())
  title              String
  description        String?
  alertDate          DateTime?
  worker             GroupMember @relation(fields: [groupMemberUserId, groupMemberGroupId], references: [userId, groupId])
  deadLineDate       DateTime?
  status             TaskStatus
  groupMemberUserId  Int
  groupMemberGroupId Int
  Comment            Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  message   String
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    Int
  createdAt DateTime @default(now())
}

enum Role {
  MEMBER
  MANAGER
}

enum TaskStatus {
  CREATED
  DOING
  DONE
}
